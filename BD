-- Tabela de Usuários
CREATE TABLE usuario (
  id SERIAL PRIMARY KEY,
  nome_completo TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  telefone_celular TEXT,
  cpf TEXT UNIQUE NOT NULL,
  senha TEXT NOT NULL,
  endereco_carteira TEXT,
  foto TEXT,
  tipo_usuario TEXT NOT NULL CHECK (tipo_usuario IN ('Leiloeiro', 'Licitante')) -- Definir o tipo do usuário
);

-- Tabela de Leilões (apenas leiloeiros podem criar leilões)
CREATE TABLE leilao (
  id SERIAL PRIMARY KEY,
  nome_ativo TEXT NOT NULL,
  raca TEXT,
  data_inicio TIMESTAMP NOT NULL,
  valor_inicial DECIMAL(10,2) NOT NULL,
  duracao INTERVAL NOT NULL,
  descricao TEXT,
  foto TEXT,
  leiloeiro_id INTEGER REFERENCES usuario(id) ON DELETE SET NULL,  -- Referência ao leiloeiro que criou o leilão
  status TEXT NOT NULL DEFAULT 'Aberto',
  vencedor_id INTEGER REFERENCES usuario(id) ON DELETE SET NULL,  -- Referência ao licitante vencedor
  data_termino TIMESTAMP
);

-- Tabela de Lances (apenas licitantes podem dar lances)
CREATE TABLE lance (
  id SERIAL PRIMARY KEY,
  valor DECIMAL(10,2) NOT NULL,
  data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  leilao_id INTEGER REFERENCES leilao(id) ON DELETE CASCADE,
  licitante_id INTEGER REFERENCES usuario(id) ON DELETE CASCADE,  -- Referência ao licitante que deu o lance
  UNIQUE (leilao_id, licitante_id)
);

-- Tabela de Transações
CREATE TABLE transacao (
  id SERIAL PRIMARY KEY,
  lance_id INTEGER REFERENCES lance(id) ON DELETE CASCADE,
  endereco_carteira TEXT NOT NULL,
  valor DECIMAL(10,2) NOT NULL,
  data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  status TEXT NOT NULL
);

-- Tabela de Histórico de Transações
CREATE TABLE historico_transacao (
  id SERIAL PRIMARY KEY,
  transacao_id INTEGER REFERENCES transacao(id) ON DELETE CASCADE,
  carteira_origem TEXT NOT NULL,
  carteira_destino TEXT NOT NULL,
  valor DECIMAL(10,4) NOT NULL,
  data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de Logs (para registrar as ações dos usuários)
CREATE TABLE logs (
  id SERIAL PRIMARY KEY,
  usuario_id INTEGER REFERENCES usuario(id) ON DELETE SET NULL,
  acao TEXT,
  descricao TEXT,
  data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Inserindo alguns dados para teste
INSERT INTO usuario (nome_completo, email, telefone_celular, cpf, senha, tipo_usuario) VALUES 
('João Leiloeiro', 'joao_leiloeiro@example.com', '11111111111', '12345678901', 'senha123', 'Leiloeiro'),
('Maria Licitante', 'maria_licitante@example.com', '22222222222', '10987654321', 'senha123', 'Licitante');

-- Testando a criação de um leilão por um leiloeiro
INSERT INTO leilao (nome_ativo, raca, data_inicio, valor_inicial, duracao, descricao, leiloeiro_id) VALUES 
('Leilão de Gado', 'Nelore', '2024-12-01 10:00:00', 5000.00, '2 days', 'Leilão de gado Nelore puro', 1);

-- Testando a inserção de um lance por um licitante
INSERT INTO lance (valor, leilao_id, licitante_id) VALUES 
(5500.00, 1, 2);


UPDATE leilao SET "nome_ativo" = 'Ativo Desconhecido' WHERE "nome_ativo" IS NULL;

UPDATE leilao SET "data_inicio" = NOW() WHERE "data_inicio" IS NULL;
